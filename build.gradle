apply plugin: 'de.gliderpilot.semantic-release'
apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'

apply from: 'gradle/credentials.gradle'
apply from: 'gradle/compile.gradle'
apply from: 'gradle/publishing.gradle'
apply from: 'gradle/bintray.gradle'
apply from: 'gradle/artifactory.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/code-coverage.gradle'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    }
}

apply from: 'compile-dependencies.gradle'

dependencies {
    testCompile 'com.netflix.nebula:nebula-test:2.2.2', {
		exclude module: 'groovy-all'
	}
}

group='de.gliderpilot.gradle.semantic-release'

tasks.release {
    dependsOn build
}

task integTest {
    dependsOn test
}

test {
    if (gradle.startParameter.taskNames.contains('integTest'))
        systemProperty 'integTest', 'true'
    maxHeapSize = '256m'
}